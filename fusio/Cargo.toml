[package]
description = "Fusio provides lean, minimal cost abstraction and extensible Read / Write trait to multiple storage on multiple poll-based / completion-based async runtime."
edition.workspace = true
license.workspace = true
name = "fusio"
readme = "../README.md"
repository.workspace = true
version.workspace = true

[package.metadata.docs.rs]
all-features = true

[features]
aws = [
    "bytes",
    "chrono",
    "chrono?/serde",
    "fs",
    "hex",
    "http",
    "quick-xml",
    "reqsign-aws-v4",
    "reqsign-core",
    "serde",
    "serde_json",
    "serde_urlencoded",
]
asyncfs = ["async-stream", "dep:async-fs", "futures-util/io"]
bytes = ["dep:bytes", "fusio-core/bytes"]
completion-based = ["fusio-core/completion-based"]
default = ["dyn", "executor", "fs"]
dyn = ["fusio-core/alloc"]
executor = []
executor-tokio = ["executor", "tokio", "tokio/rt", "tokio/sync", "tokio/time"]
fs = ["tokio?/fs", "tokio?/rt"]
http = [
    "async-stream",
    "bytes",
    "dep:http",
    "http-body",
    "http-body-util",
    "monoio?/poll-io",
    "tokio?/net",
    "tokio?/rt",
]
monoio = ["async-stream", "completion-based", "dep:monoio", "no-send"]
monoio-http = ["dep:monoio-http", "dep:monoio-http-client", "http", "monoio"]
no-send = ["fusio-core/no-send"]
opfs = [
    "async-stream",
    "dep:async-lock",
    "dep:js-sys",
    "dep:wasm-bindgen",
    "dep:wasm-bindgen-futures",
    "dep:web-sys",
    "no-send",
]
sync = ["opfs"]
tokio = ["async-stream", "dep:tokio"]
tokio-http = ["dep:reqwest", "http", "tokio"]
tokio-uring = ["async-stream", "completion-based", "dep:tokio-uring", "no-send"]
wasm-http = ["dep:reqwest", "http"]

[[bench]]
harness = false
name = "tokio"
path = "../benches/tokio.rs"
required-features = ["tokio"]

[[bench]]
harness = false
name = "monoio"
path = "../benches/monoio.rs"
required-features = ["monoio"]

[dependencies]
async-stream = { version = "0.3", optional = true }
async-fs = { version = "2.2", optional = true }
bytes = { workspace = true, optional = true }
cfg-if = "1.0.0"
chrono = { version = "0.4", optional = true, default-features = false, features = [
    "now",
    "std",
    "wasmbind",
] }
fusio-core = { path = "../fusio-core", version = "0.4.1", features = ["std"] }
futures-core = { workspace = true }
futures-util = { workspace = true }
futures-executor = { version = "0.3" }
async-lock = "3"
http = { version = "1", optional = true, default-features = false }
http-body = { version = "1", optional = true }
http-body-util = { version = "0.1", optional = true, default-features = false }
itertools = { version = "0.13" }
monoio = { version = "0.2", optional = true, features = ["sync"] }
monoio-http-client = { version = "0.3.3", optional = true }
monoio-http = { version = "0.3", optional = true }
object_store = { version = "0.12", optional = true, features = ["aws"] }
percent-encoding = { version = "2", default-features = false }
quick-xml = { version = "0.36", features = [
    "overlapped-lists",
    "serialize",
], optional = true }
reqwest = { version = "0.12.8", optional = true }
hex = { version = "0.4", optional = true }
reqsign-aws-v4 = { version = "1", optional = true }
reqsign-core = { version = "1", optional = true }
serde = { version = "1", optional = true, features = ["derive"] }
serde_json = { version = "1", optional = true }
serde_urlencoded = { version = "0.7", optional = true }
thiserror = "2.0.12"
tokio = { version = "1", optional = true, default-features = false, features = [
    "io-util",
    "rt-multi-thread",
] }
url = { version = "2.5.3", default-features = false, features = ["std"] }

[target.'cfg(target_arch = "wasm32")'.dependencies]
getrandom = { version = "0.2", features = ["js"] }
js-sys = { version = "0.3.72", optional = true }
wasm-bindgen-futures = { version = "0.4.45", optional = true, features = [
    "futures-core-03-stream",
] }
web-sys = { version = "0.3", optional = true, features = [
    "Blob",
    "File",
    "FileSystemCreateWritableOptions",
    "FileSystemDirectoryHandle",
    "FileSystemFileHandle",
    "FileSystemGetDirectoryOptions",
    "FileSystemGetFileOptions",
    "FileSystemReadWriteOptions",
    "FileSystemRemoveOptions",
    "FileSystemSyncAccessHandle",
    "FileSystemWritableFileStream",
    "Navigator",
    "ReadableStream",
    "ReadableStreamDefaultReader",
    "ReadableStreamReadResult",
    "Storage",
    "StorageManager",
    "Window",
    "WorkerGlobalScope",
    "WorkerNavigator",

] }
async-lock = { version = "3", optional = true }
wasm-bindgen = { version = "0.2.95", optional = true }

[target.'cfg(target_os = "linux")'.dependencies]
tokio-uring = { version = "0.5", default-features = false, optional = true }

[dev-dependencies]
rand = "0.8"
tempfile = "3"

[target.'cfg(not(target_arch = "wasm32"))'.dev-dependencies]
criterion = { version = "0.5", features = ["async_tokio", "html_reports"] }
futures-util = { version = "0.3" }
hyper = { version = "1", features = ["full"] }
hyper-util = { version = "0.1", features = ["full"] }
monoio = { version = "0.2" }
tokio = { version = "1", features = ["full"] }

[target.'cfg(target_os = "linux")'.dev-dependencies]
tokio-uring = { version = "0.5" }

[target.'cfg(target_arch = "wasm32")'.dev-dependencies]
wasm-bindgen = "0.2.95"
wasm-bindgen-test = "0.3.9"
